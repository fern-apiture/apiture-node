/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ApitureBanking from "../../api";
import * as core from "../../core";

export const IncompleteAccountBalances: core.serialization.ObjectSchema<
    serializers.IncompleteAccountBalances.Raw,
    ApitureBanking.IncompleteAccountBalances
> = core.serialization
    .object({
        items: core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).AccountBalance)),
        incompleteAccounts: core.serialization.lazy(async () => (await import("..")).AccountIds),
        retryCount: core.serialization.number(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("..")).AbstractBody));

export declare namespace IncompleteAccountBalances {
    interface Raw extends serializers.AbstractBody.Raw {
        items: serializers.AccountBalance.Raw[];
        incompleteAccounts: serializers.AccountIds.Raw;
        retryCount: number;
    }
}
