/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ApitureBanking from "../../api";
import * as core from "../../core";

export const ChallengeFactor: core.serialization.ObjectSchema<
    serializers.ChallengeFactor.Raw,
    ApitureBanking.ChallengeFactor
> = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("..")).ChallengeFactorType),
    labels: core.serialization.list(core.serialization.string()).optional(),
    securityQuestions: core.serialization
        .lazyObject(async () => (await import("..")).ChallengeSecurityQuestions)
        .optional(),
});

export declare namespace ChallengeFactor {
    interface Raw {
        type: serializers.ChallengeFactorType.Raw;
        labels?: string[] | null;
        securityQuestions?: serializers.ChallengeSecurityQuestions.Raw | null;
    }
}
