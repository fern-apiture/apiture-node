/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ApitureBanking from "../../api";
import * as core from "../../core";

export const AccountItem: core.serialization.ObjectSchema<serializers.AccountItem.Raw, ApitureBanking.AccountItem> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("..")).ReadOnlyResourceId).optional(),
        label: core.serialization.string().optional(),
        nickname: core.serialization.lazy(async () => (await import("..")).AccountNickname).optional(),
        maskedNumber: core.serialization.lazy(async () => (await import("..")).MaskedAccountNumber).optional(),
        allows: core.serialization.lazyObject(async () => (await import("..")).AccountPermissions),
        product: core.serialization.lazyObject(async () => (await import("..")).ProductReference).optional(),
        location: core.serialization.lazy(async () => (await import("..")).AccountLocation).optional(),
    });

export declare namespace AccountItem {
    interface Raw {
        id?: serializers.ReadOnlyResourceId.Raw | null;
        label?: string | null;
        nickname?: serializers.AccountNickname.Raw | null;
        maskedNumber?: serializers.MaskedAccountNumber.Raw | null;
        allows: serializers.AccountPermissions.Raw;
        product?: serializers.ProductReference.Raw | null;
        location?: serializers.AccountLocation.Raw | null;
    }
}
