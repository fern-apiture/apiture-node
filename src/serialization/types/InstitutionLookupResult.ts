/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ApitureBanking from "../../api";
import * as core from "../../core";

export const InstitutionLookupResult: core.serialization.ObjectSchema<
    serializers.InstitutionLookupResult.Raw,
    ApitureBanking.InstitutionLookupResult
> = core.serialization
    .object({
        found: core.serialization.boolean(),
        institution: core.serialization.lazyObject(async () => (await import("..")).SimpleInstitution).optional(),
        intermediaryInstitutions: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).SimpleInstitution))
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("..")).AbstractBody));

export declare namespace InstitutionLookupResult {
    interface Raw extends serializers.AbstractBody.Raw {
        found: boolean;
        institution?: serializers.SimpleInstitution.Raw | null;
        intermediaryInstitutions?: serializers.SimpleInstitution.Raw[] | null;
    }
}
