/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { ApitureApi } from "@fern-api/apiture";
import * as core from "../../../../core";

export const AccountFields: core.serialization.ObjectSchema<serializers.AccountFields.Raw, ApitureApi.AccountFields> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).ReadOnlyResourceId),
        label: core.serialization.string(),
        nickname: core.serialization.lazy(async () => (await import("../../..")).AccountNickname).optional(),
        maskedNumber: core.serialization.lazy(async () => (await import("../../..")).MaskedAccountNumber),
        product: core.serialization.lazyObject(async () => (await import("../../..")).ProductReference),
        location: core.serialization.lazy(async () => (await import("../../..")).AccountLocation),
    });

export declare namespace AccountFields {
    interface Raw {
        id: serializers.ReadOnlyResourceId.Raw;
        label: string;
        nickname?: serializers.AccountNickname.Raw | null;
        maskedNumber: serializers.MaskedAccountNumber.Raw;
        product: serializers.ProductReference.Raw;
        location: serializers.AccountLocation.Raw;
    }
}
