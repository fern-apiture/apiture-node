/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as ApitureBanking from "..";

/**
 * Common fields of the transaction resource used to build other model schemas.
 */
export interface TransactionFields {
    /** This transaction's unique identifier. */
    id: string;
    type: ApitureBanking.TransactionType;
    subtype: ApitureBanking.TransactionSubType;
    /** The date of the transaction in `YYYY-MM-DD` [RFC 3339](https://tools.ietf.org/html/rfc3339) `date` format. This is derived and immutable. */
    occurredOn: string;
    /** The date when the transaction occurred in `YYYY-MM-DD` [RFC 3339](https://tools.ietf.org/html/rfc3339) `date` format. This is derived and immutable.<br>**Warning**: The property `createdOn` was deprecated on version `v2.1.0` of the schema. Use the `occurredOn` property instead. `createdOn` will be removed on version `v3.0.0` of the schema. */
    createdOn?: string;
    /** The date when this transaction was posted (cleared and applied to the account balance) in [RFC 3339](https://tools.ietf.org/html/rfc3339) date `YYYY-MM-DD` format, UTC. This is derived and immutable and only present if `posted` is `true`.<br>**Warning**: The property `postedOn` was deprecated on version `v2.1.0` of the schema. Use the `occurredOn` property instead. `postedOn` will be removed on version `v3.0.0` of the schema. */
    postedOn?: string;
    amount: ApitureBanking.CreditOrDebitValue;
    /** If `true`, the transaction has been posted (cleared) and applied to the account. If `false`, the transaction is still pending and might be canceled. `posted` is only valid for credit and debit transactions and omitted for balance transactions. */
    posted?: boolean;
    balance?: ApitureBanking.CreditOrDebitValue;
    /** The user-settable transaction memo. */
    memo?: string;
    /** The transaction description assigned by the transaction cleansing service. */
    description?: string;
    category?: ApitureBanking.TransactionCategorization;
    merchant?: ApitureBanking.TransactionMerchant;
    check?: ApitureBanking.TransactionCheck;
}
